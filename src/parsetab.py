
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightUMINUSrightQUESTION_MARKAMPERSANDUMULAMPERSAND ARRAY_TYPE ASSIGN BOTTOM COMMA DIV ELSE EMPTY_ARRAY EQ FUNCTION GE GT IDENTIFIER IF INSTEAD INTEGER_TYPE LBRACE LE LEFT LPAREN LSQUARE LT MINUS MUL MUTABLE NE NUMBER OF PLUS POINTER_TYPE PRINT QUESTION_MARK RBRACE RETURN RIGHT RPAREN RSQUARE SEMI STRING STRING_TYPE TIMESHIFT TOP WHILEprogram : statement_liststatement_list : statement\n    | statement_list statementstatement : assignment\n    | print_statement\n    | if_statement\n    | while_statement\n    | return_statement\n    | move_statement\n    | function_decl\n    | array_decl\n    | pointer_decl\n    | address_of\n    | function_call_stmtassignment : IDENTIFIER ASSIGN expr SEMI\n    | IDENTIFIER LSQUARE expr RSQUARE ASSIGN expr SEMI\n    | IDENTIFIER ASSIGN function_call SEMIprint_statement : PRINT LPAREN expr RPAREN SEMIif_statement : IF LPAREN expr RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n    | IF LPAREN expr RPAREN LBRACE statement_list RBRACEwhile_statement : WHILE LPAREN expr RPAREN LBRACE statement_list RBRACE\n    | WHILE LPAREN expr RPAREN LBRACE statement_list RBRACE INSTEAD LBRACE statement_list RBRACE\n    return_statement : RETURN expr SEMImove_statement : direction SEMIdirection : TOP\n    | BOTTOM\n    | LEFT\n    | RIGHT\n    | TIMESHIFTfunction_decl : FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE statement_list RBRACE\n    | FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACEfunction_args : expr\n    | function_callfunction_args_list : function_args\n    | function_args COMMA function_args_listfunction_call : IDENTIFIER LPAREN function_args_list RPAREN\n    | IDENTIFIER LPAREN RPARENfunction_call_stmt : function_call SEMIparams : IDENTIFIER\n    | IDENTIFIER COMMA paramsarray_decl : ARRAY_TYPE INTEGER_TYPE OF IDENTIFIER expr SEMI\n    | ARRAY_TYPE INTEGER_TYPE OF IDENTIFIER SEMIpointer_decl : POINTER_TYPE INTEGER_TYPE IDENTIFIER ASSIGN expr SEMI\n    | POINTER_TYPE IDENTIFIER SEMIexpr : expr PLUS expr\n    | expr MINUS expr\n    | expr MUL expr\n    | expr DIV expr\n    | expr EQ expr\n    | expr NE expr\n    | expr LT expr\n    | expr GT expr\n    | expr LE expr\n    | expr GE exprexpr : LPAREN expr RPARENexpr : NUMBERexpr : MINUS expr %prec UMINUSexpr : MUL expr %prec UMULexpr : QUESTION_MARK IDENTIFIERaddress_of : AMPERSAND IDENTIFIERexpr : STRINGexpr : IDENTIFIER\n    | function_call\n    | address_of'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,22,24,25,31,32,33,34,35,36,37,38,40,41,42,44,49,52,54,66,67,68,69,70,71,72,73,74,75,76,81,82,84,85,86,89,107,108,109,111,112,113,114,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,45,50,53,54,-3,45,45,45,-38,45,45,45,45,45,45,80,-24,83,-60,-23,45,45,45,45,45,45,45,45,45,45,104,107,-44,-15,-17,45,45,45,45,-18,15,15,104,15,-42,15,15,15,15,-41,-43,-16,-20,-21,15,-31,-30,15,15,15,15,-19,-22,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,17,17,17,-42,17,17,17,17,-41,-43,-16,-20,-21,17,-31,-30,17,17,17,17,-19,-22,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,18,18,18,-42,18,18,18,18,-41,-43,-16,-20,-21,18,-31,-30,18,18,18,18,-19,-22,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,19,19,19,-42,19,19,19,19,-41,-43,-16,-20,-21,19,-31,-30,19,19,19,19,-19,-22,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,20,20,20,-42,20,20,20,20,-41,-43,-16,-20,-21,20,-31,-30,20,20,20,20,-19,-22,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,22,22,22,-42,22,22,22,22,-41,-43,-16,-20,-21,22,-31,-30,22,22,22,22,-19,-22,]),'ARRAY_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,23,23,23,-42,23,23,23,23,-41,-43,-16,-20,-21,23,-31,-30,23,23,23,23,-19,-22,]),'POINTER_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,24,24,24,-42,24,24,24,24,-41,-43,-16,-20,-21,24,-31,-30,24,24,24,24,-19,-22,]),'AMPERSAND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,20,31,32,33,34,35,36,37,38,40,41,42,49,54,66,67,68,69,70,71,72,73,74,75,76,84,85,86,89,107,108,109,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,25,-3,25,25,25,-38,25,25,25,25,25,25,-24,-60,-23,25,25,25,25,25,25,25,25,25,25,-44,-15,-17,25,25,25,25,-18,25,25,25,-42,25,25,25,25,-41,-43,-16,-20,-21,25,-31,-30,25,25,25,25,-19,-22,]),'TOP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,26,26,26,-42,26,26,26,26,-41,-43,-16,-20,-21,26,-31,-30,26,26,26,26,-19,-22,]),'BOTTOM':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,27,27,27,-42,27,27,27,27,-41,-43,-16,-20,-21,27,-31,-30,27,27,27,27,-19,-22,]),'LEFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,28,28,28,-42,28,28,28,28,-41,-43,-16,-20,-21,28,-31,-30,28,28,28,28,-19,-22,]),'RIGHT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,29,29,29,-42,29,29,29,29,-41,-43,-16,-20,-21,29,-31,-30,29,29,29,29,-19,-22,]),'TIMESHIFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,112,113,116,118,121,122,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,30,30,30,-42,30,30,30,30,-41,-43,-16,-20,-21,30,-31,-30,30,30,30,30,-19,-22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,118,126,127,128,129,130,132,135,140,141,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,-42,-41,-43,-16,-20,-21,-31,-30,-19,-22,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,31,35,49,54,66,84,85,86,111,118,121,122,125,126,127,128,129,130,131,132,135,138,139,140,141,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-38,-24,-60,-23,-44,-15,-17,-18,-42,129,130,132,-41,-43,-16,-20,-21,135,-31,-30,140,141,-19,-22,]),'ASSIGN':([15,83,87,],[32,108,109,]),'LSQUARE':([15,],[33,]),'LPAREN':([15,17,18,19,20,32,33,34,36,37,38,40,41,42,45,50,67,68,69,70,71,72,73,74,75,76,89,107,108,109,],[34,36,37,38,42,42,42,42,42,42,42,42,42,42,34,81,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'SEMI':([16,21,26,27,28,29,30,39,43,45,46,47,48,53,54,55,56,59,77,78,80,88,90,93,94,95,96,97,98,99,100,101,102,103,107,117,119,120,],[35,49,-25,-26,-27,-28,-29,66,-56,-62,-61,-63,-64,84,-60,85,86,-37,-57,-58,-59,-36,111,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,118,126,127,128,]),'NUMBER':([20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'MINUS':([20,32,33,34,36,37,38,39,40,41,42,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,93,94,95,96,97,98,99,100,101,102,103,107,108,109,117,119,120,],[40,40,40,40,40,40,40,68,40,40,40,-56,-62,-61,-63,-64,-60,68,-63,68,-37,68,-63,68,68,68,40,40,40,40,40,40,40,40,40,40,-57,-58,68,-59,-36,40,-45,-46,-47,-48,68,68,68,68,68,68,-55,40,40,40,68,68,68,]),'MUL':([20,32,33,34,36,37,38,39,40,41,42,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,93,94,95,96,97,98,99,100,101,102,103,107,108,109,117,119,120,],[41,41,41,41,41,41,41,69,41,41,41,-56,-62,-61,-63,-64,-60,69,-63,69,-37,69,-63,69,69,69,41,41,41,41,41,41,41,41,41,41,-57,-58,69,-59,-36,41,69,69,-47,-48,69,69,69,69,69,69,-55,41,41,41,69,69,69,]),'QUESTION_MARK':([20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'STRING':([20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'INTEGER_TYPE':([23,24,],[51,52,]),'RPAREN':([34,43,45,46,47,48,54,58,59,60,61,62,63,64,65,77,78,79,80,81,88,93,94,95,96,97,98,99,100,101,102,103,104,105,110,123,],[59,-56,-62,-61,-63,-64,-60,88,-37,-34,-32,-33,90,91,92,-57,-58,103,-59,106,-36,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-39,115,-35,-40,]),'PLUS':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[67,-56,-62,-61,-63,-64,-60,67,-63,67,-37,67,-63,67,67,67,-57,-58,67,-59,-36,-45,-46,-47,-48,67,67,67,67,67,67,-55,67,67,67,]),'DIV':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[70,-56,-62,-61,-63,-64,-60,70,-63,70,-37,70,-63,70,70,70,-57,-58,70,-59,-36,70,70,-47,-48,70,70,70,70,70,70,-55,70,70,70,]),'EQ':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[71,-56,-62,-61,-63,-64,-60,71,-63,71,-37,71,-63,71,71,71,-57,-58,71,-59,-36,-45,-46,-47,-48,71,71,71,71,71,71,-55,71,71,71,]),'NE':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[72,-56,-62,-61,-63,-64,-60,72,-63,72,-37,72,-63,72,72,72,-57,-58,72,-59,-36,-45,-46,-47,-48,72,72,72,72,72,72,-55,72,72,72,]),'LT':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[73,-56,-62,-61,-63,-64,-60,73,-63,73,-37,73,-63,73,73,73,-57,-58,73,-59,-36,-45,-46,-47,-48,73,73,73,73,73,73,-55,73,73,73,]),'GT':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[74,-56,-62,-61,-63,-64,-60,74,-63,74,-37,74,-63,74,74,74,-57,-58,74,-59,-36,-45,-46,-47,-48,74,74,74,74,74,74,-55,74,74,74,]),'LE':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[75,-56,-62,-61,-63,-64,-60,75,-63,75,-37,75,-63,75,75,75,-57,-58,75,-59,-36,-45,-46,-47,-48,75,75,75,75,75,75,-55,75,75,75,]),'GE':([39,43,45,46,47,48,54,55,56,57,59,61,62,63,64,65,77,78,79,80,88,93,94,95,96,97,98,99,100,101,102,103,117,119,120,],[76,-56,-62,-61,-63,-64,-60,76,-63,76,-37,76,-63,76,76,76,-57,-58,76,-59,-36,-45,-46,-47,-48,76,76,76,76,76,76,-55,76,76,76,]),'RSQUARE':([43,45,46,47,48,54,57,59,77,78,80,88,93,94,95,96,97,98,99,100,101,102,103,],[-56,-62,-61,-63,-64,-60,87,-37,-57,-58,-59,-36,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,]),'COMMA':([43,45,46,47,48,54,59,60,61,62,77,78,80,88,93,94,95,96,97,98,99,100,101,102,103,104,],[-56,-62,-61,-63,-64,-60,-37,89,-32,-33,-57,-58,-59,-36,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,114,]),'OF':([51,],[82,]),'LBRACE':([91,92,106,115,133,134,],[112,113,116,124,136,137,]),'ELSE':([129,],[133,]),'INSTEAD':([130,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,112,113,116,124,136,137,],[2,121,122,125,131,138,139,]),'statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[3,31,3,3,3,31,31,3,31,31,3,3,31,31,]),'assignment':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'print_statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'return_statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'move_statement':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function_decl':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'array_decl':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'pointer_decl':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'address_of':([0,2,20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,112,113,116,121,122,124,125,131,136,137,138,139,],[13,13,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_call_stmt':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function_call':([0,2,20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,112,113,116,121,122,124,125,131,136,137,138,139,],[16,16,47,56,47,62,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,62,47,47,47,16,16,16,16,16,16,16,16,16,16,16,16,]),'direction':([0,2,112,113,116,121,122,124,125,131,136,137,138,139,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expr':([20,32,33,34,36,37,38,40,41,42,67,68,69,70,71,72,73,74,75,76,89,107,108,109,],[39,55,57,61,63,64,65,77,78,79,93,94,95,96,97,98,99,100,101,102,61,117,119,120,]),'function_args_list':([34,89,],[58,110,]),'function_args':([34,89,],[60,60,]),'params':([81,114,],[105,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',17),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> assignment','statement',1,'p_statement','parser.py',31),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> move_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> function_decl','statement',1,'p_statement','parser.py',37),
  ('statement -> array_decl','statement',1,'p_statement','parser.py',38),
  ('statement -> pointer_decl','statement',1,'p_statement','parser.py',39),
  ('statement -> address_of','statement',1,'p_statement','parser.py',40),
  ('statement -> function_call_stmt','statement',1,'p_statement','parser.py',41),
  ('assignment -> IDENTIFIER ASSIGN expr SEMI','assignment',4,'p_assignment','parser.py',46),
  ('assignment -> IDENTIFIER LSQUARE expr RSQUARE ASSIGN expr SEMI','assignment',7,'p_assignment','parser.py',47),
  ('assignment -> IDENTIFIER ASSIGN function_call SEMI','assignment',4,'p_assignment','parser.py',48),
  ('print_statement -> PRINT LPAREN expr RPAREN SEMI','print_statement',5,'p_print_statement','parser.py',56),
  ('if_statement -> IF LPAREN expr RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser.py',61),
  ('if_statement -> IF LPAREN expr RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser.py',62),
  ('while_statement -> WHILE LPAREN expr RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser.py',70),
  ('while_statement -> WHILE LPAREN expr RPAREN LBRACE statement_list RBRACE INSTEAD LBRACE statement_list RBRACE','while_statement',11,'p_while_statement','parser.py',71),
  ('return_statement -> RETURN expr SEMI','return_statement',3,'p_return_statement','parser.py',80),
  ('move_statement -> direction SEMI','move_statement',2,'p_move_statement','parser.py',85),
  ('direction -> TOP','direction',1,'p_direction','parser.py',90),
  ('direction -> BOTTOM','direction',1,'p_direction','parser.py',91),
  ('direction -> LEFT','direction',1,'p_direction','parser.py',92),
  ('direction -> RIGHT','direction',1,'p_direction','parser.py',93),
  ('direction -> TIMESHIFT','direction',1,'p_direction','parser.py',94),
  ('function_decl -> FUNCTION IDENTIFIER LPAREN params RPAREN LBRACE statement_list RBRACE','function_decl',8,'p_function_decl','parser.py',99),
  ('function_decl -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE','function_decl',7,'p_function_decl','parser.py',100),
  ('function_args -> expr','function_args',1,'p_function_args_expr','parser.py',108),
  ('function_args -> function_call','function_args',1,'p_function_args_expr','parser.py',109),
  ('function_args_list -> function_args','function_args_list',1,'p_function_args_list','parser.py',114),
  ('function_args_list -> function_args COMMA function_args_list','function_args_list',3,'p_function_args_list','parser.py',115),
  ('function_call -> IDENTIFIER LPAREN function_args_list RPAREN','function_call',4,'p_function_call','parser.py',123),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',124),
  ('function_call_stmt -> function_call SEMI','function_call_stmt',2,'p_function_call_stmt','parser.py',132),
  ('params -> IDENTIFIER','params',1,'p_params','parser.py',137),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','parser.py',138),
  ('array_decl -> ARRAY_TYPE INTEGER_TYPE OF IDENTIFIER expr SEMI','array_decl',6,'p_array_decl1','parser.py',146),
  ('array_decl -> ARRAY_TYPE INTEGER_TYPE OF IDENTIFIER SEMI','array_decl',5,'p_array_decl1','parser.py',147),
  ('pointer_decl -> POINTER_TYPE INTEGER_TYPE IDENTIFIER ASSIGN expr SEMI','pointer_decl',6,'p_pointer_decl','parser.py',155),
  ('pointer_decl -> POINTER_TYPE IDENTIFIER SEMI','pointer_decl',3,'p_pointer_decl','parser.py',156),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','parser.py',164),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','parser.py',165),
  ('expr -> expr MUL expr','expr',3,'p_expr_binop','parser.py',166),
  ('expr -> expr DIV expr','expr',3,'p_expr_binop','parser.py',167),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',168),
  ('expr -> expr NE expr','expr',3,'p_expr_binop','parser.py',169),
  ('expr -> expr LT expr','expr',3,'p_expr_binop','parser.py',170),
  ('expr -> expr GT expr','expr',3,'p_expr_binop','parser.py',171),
  ('expr -> expr LE expr','expr',3,'p_expr_binop','parser.py',172),
  ('expr -> expr GE expr','expr',3,'p_expr_binop','parser.py',173),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','parser.py',178),
  ('expr -> NUMBER','expr',1,'p_expr_num','parser.py',183),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','parser.py',188),
  ('expr -> MUL expr','expr',2,'p_expr_umul','parser.py',196),
  ('expr -> QUESTION_MARK IDENTIFIER','expr',2,'p_expr_questionmark','parser.py',201),
  ('address_of -> AMPERSAND IDENTIFIER','address_of',2,'p_address_of','parser.py',206),
  ('expr -> STRING','expr',1,'p_expr_str','parser.py',211),
  ('expr -> IDENTIFIER','expr',1,'p_expr_var','parser.py',216),
  ('expr -> function_call','expr',1,'p_expr_var','parser.py',217),
  ('expr -> address_of','expr',1,'p_expr_var','parser.py',218),
]
